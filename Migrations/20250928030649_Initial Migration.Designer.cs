// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleMaintenanceTracker.Context;

#nullable disable

namespace VehicleMaintenanceTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250928030649_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceStepModel", b =>
                {
                    b.Property<int>("MaintenanceStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaintenanceStepId"));

                    b.Property<int>("TaskMaintenanceTaskId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceStepId");

                    b.HasIndex("TaskMaintenanceTaskId");

                    b.ToTable("MaintenanceSteps");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceSupplyModel", b =>
                {
                    b.Property<int>("MaintenanceSupplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaintenanceSupplyId"));

                    b.Property<int>("MaintenanceTaskId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceSupplyId");

                    b.HasIndex("MaintenanceTaskId");

                    b.ToTable("MaintenanceSupplies");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceTaskModel", b =>
                {
                    b.Property<int>("MaintenanceTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaintenanceTaskId"));

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceTaskId");

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceTasks");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.VehicleModel", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceStepModel", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.MaintenanceTaskModel", "Task")
                        .WithMany("MaintenanceSteps")
                        .HasForeignKey("TaskMaintenanceTaskId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceSupplyModel", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.MaintenanceTaskModel", "MaintenanceTask")
                        .WithMany("MaintenanceSupplies")
                        .HasForeignKey("MaintenanceTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintenanceTask");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceTaskModel", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.VehicleModel", "Vehicle")
                        .WithMany("MaintenanceTasks")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.MaintenanceTaskModel", b =>
                {
                    b.Navigation("MaintenanceSteps");

                    b.Navigation("MaintenanceSupplies");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.VehicleModel", b =>
                {
                    b.Navigation("MaintenanceTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
